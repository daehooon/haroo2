<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  


<mapper namespace="com.bit189.haroo.dao.CommentDao">

  <resultMap id="commentMap" type="Comment">
    <id column="com_no" property="no"/>
    <result column="feed_no" property="feedNo"/>
    <result column="comment" property="content"/>
    <result column="com_dttm" property="registeredDate"/>
    <result column="com_stat" property="state"/>
    <result column="cmt_like_cnt" property="likeCount"/>
    
    <association property="writer" javaType="Member"> <!-- 댓글작성자 -->
      <id column="wmno" property="no"/>
      <result column="wprofile_pic" property="profilePicture"/>
      <result column="wname" property="name"/>
      <result column="wnickname" property="nickname"/>
    </association> 
    
    <collection property="reComments" ofType="ReComment"> <!-- 대댓글 -->
      <id column="recom_no" property="no"/>
      <result column="content" property="content"/>
      <result column="rdttm" property="registeredDate"/>
      <result column="recom_stat" property="state"/>
      <result column="recmt_like_cnt" property="likeCount"/>
      
      <association property="reWriter" javaType="Member"> <!-- 대댓글작성자 -->
        <id column="rmmno" property="no"/>
	      <result column="rmprofile_pic" property="profilePicture"/>
	      <result column="rmname" property="name"/>
	      <result column="rmnickname" property="nickname"/>
      </association>
      
      <association property="taggedMember" javaType="Member"> <!-- 대댓글에서 태그된 멤버 -->
        <id column="tmmno" property="no"/>
        <result column="tmname" property="name"/>
        <result column="tmnickname" property="nickname"/>
      </association>
    </collection>
  </resultMap>
  
  
  <select id="findByComments" resultMap="commentMap" parameterType="int">
		select
	    c.com_no,
	    c.feed_no,
	    c.comment,
	    c.com_dttm,
	    c.com_stat,
	    (select count(*) from har_com_like where com_no=c.com_no) as cmt_like_cnt,
	    m.mno as wmno,
	    m.name as wname,
	    m.nickname as wnickname,
	    m.profile_pic as wprofile_pic,
	    r.recom_no,
	    r.content,
	    r.rdttm,
	    r.recom_stat,
	    (select count(*) from har_recom_like where recom_no=r.recom_no) as recmt_like_cnt,
	    rm.mno as rmmno,
	    rm.name as rmname,
	    rm.nickname as rmnickname,
	    rm.profile_pic as rmprofile_pic,
	    tm.mno as tmmno,
	    tm.name as tmname,
	    tm.nickname as tmnickname
		from 
	    har_comment c
	    inner join har_member m on c.mno=m.mno
	    left join har_recomment r on c.com_no=r.com_no
	    left join har_member rm on r.mno=rm.mno
	    left join har_member tm on r.tagged_mem=tm.mno
		where
		  c.feed_no=#{no}
		order by c.com_dttm desc, c.com_no desc, r.rdttm desc
  </select>
  
  
  <select id="findByComment" parameterType="int" resultMap="commentMap">
    select
	    c.com_no,
	    c.feed_no,
	    c.com_stat,
	    c.comment,
	    c.mno as wmno,
	    m.name as wname,
	    m.nickname as wnickname
	  from 
	    har_comment c
	    inner join har_member m on c.mno=m.mno
	  where
	    c.com_no=#{no}
      and m.mstat=1
      and c.com_stat=1;
  </select>
  
  
  <insert id="insert" parameterType="Comment">
    insert into har_comment (feed_no, mno, comment)
    value (#{feedNo}, #{writer.no}, #{content})
  </insert>
  
  <delete id="delete" parameterType="int">
    update har_comment set
        com_stat=0
    where com_no = #{no}
  </delete>
  
  
  <select id="commentCount" parameterType="int" resultType="String">
    select 
    (select count(*) from har_comment where feed_no=#{no} and com_stat=1) +
    (select count(*) from har_recomment r inner join har_comment c on r.com_no=c.com_no where c.feed_no=#{no} and r.recom_stat=1 and c.com_stat=1) com_cnt
  </select>
  
  <update id="update" parameterType="Comment">
    update har_comment set
        comment=#{content}
    where com_no = #{no}
  </update>
  
  <select id="findLike" parameterType="Map" resultType="String">
    select
      count(*)
    from
      har_com_like
    where
      com_no=#{commentNo}
      and mno=#{memberNo}
  </select>
  
  <delete id="deleteLike" parameterType="Map">
    delete from har_com_like
    where com_no=#{commentNo}
          and mno=#{memberNo}
  </delete>
  
  <insert id="addLike" parameterType="Map">
    insert into har_com_like (com_no, mno)
    values (#{commentNo}, #{memberNo})
  </insert>
  
  
  
  


















</mapper>
  
  